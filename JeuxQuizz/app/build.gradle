apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "eu.remilapointe.jeuxquizz"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:0.8.3"

    // log4k
    def log4kVersion = '1.0.1'
    implementation "com.log4k:log4k:$log4kVersion"
    implementation "com.log4k:log4k-android:$log4kVersion"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.5.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha02"
    implementation 'com.google.android.material:material:1.3.0-alpha03'
    implementation 'com.android.support:design:29.1.0'

    def lifecycle_version = "2.2.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    def nav_version = "2.3.1"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def paging_version = "2.1.1"
//    implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx
    // alternatively - without Android dependencies for testing
//    testImplementation "androidx.paging:paging-common:$paging_version" // For Kotlin use paging-common-ktx
    // optional - RxJava support
//    implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use paging-rxjava2-ktx

    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // StatedFragment
    //implementation "com.inthecheesefactory.thecheeselibrary:stated-fragment-support-v4:0.9.2"
//    implementation "com.inthecheesefactory.thecheeselibrary:stated-fragment:0.9.2"

    // Dagger
//    kapt "com.google.dagger:dagger-compiler:2.9"

    // Coroutines
    def coroutines_version = '1.3.7'
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"


    // TESTS
    testImplementation 'junit:junit:4.13'
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    // Core library
    androidTestImplementation "androidx.test:core:1.3.0"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    // Hamcrest
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Assertions
    androidTestImplementation "androidx.test.ext:truth:1.3.0"
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}
