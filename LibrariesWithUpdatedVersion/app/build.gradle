apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "eu.remilapointe.librarieswithupdatedversion"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

//    configurations.all {
//        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//            def requested = details.requested
//            if (requested.group == "com.android.support") {
//                if (!requested.name.startsWith("multidex")) {
//                    details.useVersion "28.+"
//                }
//            }
//        }
//    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

//    implementation "com.android.support.constraint:constraint-layout:2.0.4"

    kapt 'com.android.databinding:compiler:3.2.0-alpha10'
    // AppCompat
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.7.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.5.0-alpha02'
    implementation 'com.android.support:design:31.1.0'
    //implementation "com.android.support:support-annotations:28.0.0"
    //implementation "com.android.support:appcompat-v7:$build_versions.build_tools"
    //implementation "com.android.support:support-v4:$build_versions.build_tools"
    //implementation "com.android.support:gridlayout-v7:$build_versions.build_tools"
    //implementation "com.android.support:design:$build_versions.build_tools"
    //implementation "com.android.support:cardview-v7:$build_versions.build_tools"

    def paging_version = "3.0.1"
//    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
//    implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx
    // alternatively - without Android dependencies for testing
//    testImplementation "androidx.paging:paging-common:$paging_version" // For Kotlin use paging-common-ktx
    // optional - RxJava support
//    implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use paging-rxjava2-ktx

//    implementation "android.arch.lifecycle:extensions:1.1.1"

    implementation "androidx.annotation:annotation:1.2.0"
    implementation "androidx.appcompat:appcompat:1.4.0-alpha03"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.cardview:cardview:1.0.0"
//    def x_legacy_version = "1.0"
//    implementation "androidx.legacy:legacy-support-v4:$x_legacy_version"
//    implementation "androidx.legacy:legacy-support-core-utils:1.0.0"
    //implementation "androidx.constraintlayout.widget:constraintlayout:$versions.x_constraint_widget"

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    //annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-testing:$room_version"

    def lifecycle_version = "2.3.1"
    // ViewModel and LiveData
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

//    def lifecycle_version = "2.4.0-alpha03"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    implementation "androidx.arch.core:core-testing:2.1.0"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"

    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    def dagger_version = "2.38.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
//    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    //annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    //annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    def x_kotlin_coroutines_version ="1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$x_kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$x_kotlin_coroutines_version"
//    implementation "org.jetbrains.anko:anko-common:0.10.8"

    //def glide_version = "4.12.0"
    //implementation "com.github.bumptech.glide:glide:$glide_version"
    //annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    implementation "androidx.constraintlayout:constraintlayout:2.1.0"
//    implementation "com.jakewharton.timber:timber:5.0.1"

    implementation "io.reactivex.rxjava2:rxjava:2.2.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "org.hamcrest:hamcrest-all:1.3"
    implementation "com.android.tools.build:gradle:2.3.0"

    /**
    def work_version = "1.0.1"
    def work_firebase_version = "1.0.0-alpha11"
    implementation "android.arch.work:work-runtime:$work_version"
    implementation "android.arch.work:work-testing:$work_version"
    implementation "android.arch.work:work-firebase:$work_firebase_version"
    implementation "android.arch.work:work-runtime-ktx:$work_version"
    **/

    /**
    def nav_version = "2.3.5"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    def navigation_version = "1.0.0"
    implementation "android.arch.navigation:navigation-runtime:$nav_version"
    implementation "android.arch.navigation:navigation-runtime-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-fragment:$nav_version"
    implementation "android.arch.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    **/

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testImplementation "android.arch.navigation:navigation-testing:1.0.0-alpha08"

    def x_espresso_version = "3.4.0"
    testImplementation "androidx.test.espresso:espresso-core:$x_espresso_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$x_espresso_version"
    testImplementation "androidx.test.espresso:espresso-intents:$x_espresso_version"

    def x_atsl_runner_version = "1.4.0"
    testImplementation "androidx.test:runner:$x_atsl_runner_version"
    testImplementation "androidx.test:rules:$x_atsl_runner_version"

    testImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.28.1"
    testImplementation "org.mockito:mockito-core:3.11.2"
    testImplementation "org.mockito:mockito-all:2.0.2-beta"
    testImplementation "org.mockito:mockito-android:3.11.2"

    testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0-RC1"


    testImplementation "junit:junit:4.13.1"
    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:1.1.1"
    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:1.1.1"

    def androidx_test_version = "1.4.0"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    /**
    androidTestImplementation("com.schibsted.spain:barista:2.3.0") {
      exclude group: 'com.android.support', module: 'support-annotations'
    }
    **/
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
}

repositories {
    google()
}
