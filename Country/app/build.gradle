apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 31
//    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "eu.remilapointe.country"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
//    implementation "org.jetbrains.anko:anko-common:0.8.3"

    // log4k
//    def log4kVersion = '1.0.1'
//    implementation "com.log4k:log4k:$log4kVersion"
//    implementation "com.log4k:log4k-android:$log4kVersion"

    // logging slf4j
    implementation "org.slf4j:slf4j-simple:1.7.29"
    implementation "io.github.microutils:kotlin-logging:1.12.5"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.7.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.5.0-alpha03'
    implementation 'com.android.support:design:31.1.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    def lifecycle_version = "2.3.1"
    // ViewModel and LiveData
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    //testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    def nav_version = "2.3.5"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def paging_version = "2.1.1"
//    implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx
    // alternatively - without Android dependencies for testing
//    testImplementation "androidx.paging:paging-common:$paging_version" // For Kotlin use paging-common-ktx
    // optional - RxJava support
//    implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use paging-rxjava2-ktx

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // StatedFragment
    //implementation "com.inthecheesefactory.thecheeselibrary:stated-fragment-support-v4:0.9.2"
//    implementation "com.inthecheesefactory.thecheeselibrary:stated-fragment:0.9.2"

    // Dagger
//    kapt "com.google.dagger:dagger-compiler:2.9"

    // Coroutines
    def coroutines_version = '1.4.3'
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"


    // TESTS
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    // Core library
    def androidx_test_version = "1.4.0"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    // Assertions
    androidTestImplementation "androidx.test.ext:truth:$androidx_test_version"
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

}
